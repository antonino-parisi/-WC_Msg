
				CREATE PROCEDURE [dbo].[Usp_Customer_PriceChange_Alert]
						@ACCOUNTID NVARCHAR(50),
						@SUBACCOUNTID NVARCHAR(50)
						--@STARTDATE DATETIME,
						--@ENDDATE DATETIME			
				AS
				DECLARE  @OPID NVARCHAR(200)
				DECLARE  @OPID_1 NVARCHAR(200)
				--,@ROUTEID NVARCHAR(50)
				DECLARE @OLDPRICE FLOAT,@NEWPRICE FLOAT
				declare @VirtualACCOUNTID NVARCHAR(50)
				declare @VirtualSUBACCOUNTID NVARCHAR(50)
                declare @StandardRouteName nvarchar(50)

		CREATE TABLE #TEMPTABLE_EMAIL
		(
		 COUNTRY NVARCHAR(50),
		 OPERATORNAME NVARCHAR(200),
		 MCC NVARCHAR(50),
		 MNC NVARCHAR(50),
		 NEWPRICE FLOAT,
		 OLDPRICE FLOAT,
		 PRICEDIFF FLOAT,
		 ExistingCost FLOAT,
		 ProposedCost FLOAT
		 
		)
		
		
		
		CREATE TABLE #TEMPTABLE_EMAILATTACHMENT
		(
		 COUNTRY NVARCHAR(50),
		 OPERATORNAME NVARCHAR(200),
		 MCC NVARCHAR(50),
		 MNC NVARCHAR(50),
		 PRICE FLOAT
		
		 
				 
		)
		
		--ROUND(@_cost,4)
		
				------------------------FOR EMAIL BODY---------------------------------------------------------------------------
				DECLARE CHANGELIST_CUR  CURSOR FOR SELECT OPERATOR FROM PRICECHANGEALERTDATA WHERE ACTIVE=1 GROUP BY OPERATOR
				OPEN CHANGELIST_CUR
				FETCH NEXT FROM CHANGELIST_CUR INTO @OPID                                                 
				WHILE @@FETCH_STATUS = 0
				BEGIN
			   IF EXISTS( SELECT * FROM planrouting WHERE ACCOUNTID=@ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND OPERATOR=@OPID)
			   BEGIN
			  -- PRINT 'SPECIFIC'	
			   INSERT INTO #TEMPTABLE_EMAIL 			
			   SELECT OP.COUNTRY,OP.OPERATORNAME,OPL.MCC,OPL.MNC,round(PC.NEWPRICE,4),round(PC.OLDPRICE,4),Round((ROUND(PC.NEWPRICE,4)-Round(PC.OLDPRICE,4)),4) AS PRICEDIFF,round(ExistingCost,4),round(ProposedCost,4)
				FROM PRICECHANGEALERTDATA PC LEFT OUTER JOIN OPERATOR OP ON PC.OPERATOR=OP.OPERATORID
				LEFT OUTER JOIN OPERATORIDLOOKUP OPL ON OP.OPERATORID=OPL.OPERATORID
				--WHERE PC.ACCOUNTID<>'*' AND PC.SUBACCOUNTID<>'*' AND PC.ACTIVE=1 AND OP.OPERATORID=@OPID
				WHERE PC.ACCOUNTID=@ACCOUNTID AND PC.SUBACCOUNTID=@SUBACCOUNTID AND PC.ACTIVE=1 AND OP.OPERATORID=@OPID --and  PC.NewPrice is not null

		       						           
			   END
			   ELSE 
			   BEGIN
			   IF EXISTS(SELECT STANDARDROUTEID FROM ACCOUNT WHERE ACCOUNTID= @ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND STANDARDROUTEID IS NOT NULL) 
			   BEGIN
			   
			   SELECT @StandardRouteName=STANDARDROUTEID FROM ACCOUNT WHERE ACCOUNTID= @ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND STANDARDROUTEID IS NOT NULL
			   SELECT @VirtualACCOUNTID=ACCOUNTID,@VirtualSUBACCOUNTID=SUBACCOUNTID FROM STANDARDACCOUNT WHERE StandardRouteIdName=@StandardRouteName
			   
			   IF EXISTS( SELECT * FROM planrouting WHERE ACCOUNTID=@VirtualACCOUNTID AND SUBACCOUNTID=@VirtualSUBACCOUNTID AND OPERATOR=@OPID)
			   BEGIN
			   PRINT 'STANDARD'
			   INSERT INTO #TEMPTABLE_EMAIL
			   SELECT OP.COUNTRY,OP.OPERATORNAME,OPL.MCC,OPL.MNC,round(PC.NEWPRICE,4),round(PC.OLDPRICE,4),Round((ROUND(PC.NEWPRICE,4)-Round(PC.OLDPRICE,4)),4) AS PRICEDIFF,round(ExistingCost,4),round(ProposedCost,4)
				FROM PRICECHANGEALERTDATA PC LEFT OUTER JOIN OPERATOR OP ON PC.OPERATOR=OP.OPERATORID
				LEFT OUTER JOIN OPERATORIDLOOKUP OPL ON OP.OPERATORID=OPL.OPERATORID
				WHERE PC.ACCOUNTID=@VirtualACCOUNTID AND PC.SUBACCOUNTID=@VirtualSUBACCOUNTID AND PC.ACTIVE=1 AND OP.OPERATORID=@OPID --and  PC.NewPrice is not null
		      
		      
		      
			   END
				END
				 END
		         
				 FETCH NEXT FROM CHANGELIST_CUR INTO @OPID 
		END
		CLOSE CHANGELIST_CUR
		DEALLOCATE CHANGELIST_CUR
				
					
					 --SELECT * FROM #TEMPTABLE_EMAIL
					
					
				SELECT distinct temp.COUNTRY,temp.OPERATORNAME,temp.MCC,
				STUFF(( SELECT  ';' + temp1.MNC
                FROM    #TEMPTABLE_EMAIL temp1  WHERE  temp1.COUNTRY in (temp.COUNTRY)  and temp1.OPERATORNAME in(temp.OPERATORNAME ) and temp1.MCC in(temp.MCC )  
              FOR
                XML PATH('')
              ), 1, 1, '') AS 'MNC'
				,temp.NEWPRICE,temp.OLDPRICE,temp.PRICEDIFF,temp.ExistingCost,temp.ProposedCost FROM #TEMPTABLE_EMAIL temp






				----------------------FOR EMAIL ATTACHEMNT--------------------------------------------
				
				DECLARE ROUTING_CUR  CURSOR FOR SELECT OPERATOR FROM planrouting WHERE ACTIVE=1 GROUP BY OPERATOR
				OPEN ROUTING_CUR
				FETCH NEXT FROM ROUTING_CUR INTO @OPID_1                                                 
				WHILE @@FETCH_STATUS = 0
				BEGIN
			   IF EXISTS( SELECT * FROM planrouting WHERE ACCOUNTID=@ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND OPERATOR=@OPID_1)
			   BEGIN
			    PRINT 'SPECIFIC attachement'	
			   INSERT INTO #TEMPTABLE_EMAILATTACHMENT 						
				SELECT OP.COUNTRY,OP.OPERATORNAME,OPL.MCC,OPL.MNC,PR.PRICE
				FROM planrouting PR LEFT OUTER JOIN OPERATOR OP ON PR.OPERATOR=OP.OPERATORID
				LEFT OUTER JOIN OPERATORIDLOOKUP OPL ON OP.OPERATORID=OPL.OPERATORID
				WHERE PR.ACCOUNTID=@ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND OP.OPERATORID=@OPID_1 AND OP.OPERATORID IS NOT NULL AND PR.ACTIVE=1
		       						           
			   END
			   ELSE 
			   BEGIN
			   IF EXISTS(SELECT STANDARDROUTEID FROM ACCOUNT WHERE ACCOUNTID= @ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND STANDARDROUTEID IS NOT NULL) 
			   BEGIN
			    SELECT @StandardRouteName=STANDARDROUTEID FROM ACCOUNT WHERE ACCOUNTID= @ACCOUNTID AND SUBACCOUNTID=@SUBACCOUNTID AND STANDARDROUTEID IS NOT NULL
			   SELECT @VirtualACCOUNTID=ACCOUNTID,@VirtualSUBACCOUNTID=SUBACCOUNTID FROM STANDARDACCOUNT WHERE StandardRouteIdName=@StandardRouteName
			   
			   IF EXISTS( SELECT * FROM planrouting WHERE ACCOUNTID=@VirtualACCOUNTID AND SUBACCOUNTID=@VirtualSUBACCOUNTID AND OPERATOR=@OPID_1)
			   BEGIN
			   PRINT 'STANDARD attachment'
			   INSERT INTO #TEMPTABLE_EMAILATTACHMENT
				SELECT OP.COUNTRY,OP.OPERATORNAME,OPL.MCC,OPL.MNC,PR.PRICE
				FROM planrouting PR LEFT OUTER JOIN OPERATOR OP ON PR.OPERATOR=OP.OPERATORID
				LEFT OUTER JOIN OPERATORIDLOOKUP OPL ON OP.OPERATORID=OPL.OPERATORID
				WHERE PR.ACCOUNTID=@VirtualACCOUNTID  AND SUBACCOUNTID=@VirtualSUBACCOUNTID AND OP.OPERATORID=@OPID_1 AND OP.OPERATORID IS NOT NULL AND PR.ACTIVE=1			
		      		     		      
			   END
				END
				 END
		         
				 FETCH NEXT FROM ROUTING_CUR INTO @OPID_1 
		END
		CLOSE ROUTING_CUR
		DEALLOCATE ROUTING_CUR
				
				
    --    SELECT * FROM #TEMPTABLE_EMAILATTACHMENT ORDER BY MCC ASC, MNC DESC ;
				
					SELECT distinct temp.COUNTRY,temp.OPERATORNAME,temp.MCC,
				STUFF(( SELECT  ';' + temp1.MNC
                FROM    #TEMPTABLE_EMAILATTACHMENT temp1  WHERE  temp1.COUNTRY in (temp.COUNTRY)  and temp1.OPERATORNAME in(temp.OPERATORNAME ) and temp1.MCC in(temp.MCC )
              FOR
                XML PATH('')
              ), 1, 1, '') AS 'MNC'
				,temp.PRICE FROM #TEMPTABLE_EMAILATTACHMENT temp order by temp.MCC asc
				
					
					
																																																																												
   DROP TABLE #TEMPTABLE_EMAIL

   DROP TABLE #TEMPTABLE_EMAILATTACHMENT

